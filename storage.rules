rules_version = '2';

// Craft rules based on data in your Firestore database
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if the user is an admin
    function isAdmin() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Allow read access to course images and resources for authenticated users
    match /course-images/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Allow any authenticated user to write
    }

    match /resources/{fileName} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /testimonials-images/{fileName} {
      allow read: if true; // Allow public read access
      allow write: if isAdmin(); // Restrict writes to admins
    }

    // Default rule: deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}